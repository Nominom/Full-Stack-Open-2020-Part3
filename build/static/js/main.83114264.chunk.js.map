{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","deletePerson","map","person","key","name","number","onClick","Notification","message","cssClass","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","request","App","useState","setPersons","setNewName","setNewNumber","filterString","setNewFilter","notificationMessage","setNotificationMessage","notificationClass","setNotificationClass","useEffect","personService","showNotification","error","setTimeout","event","target","preventDefault","some","x","window","confirm","find","p","catch","filter","concat","lowerFilter","toLowerCase","includes","filterPersons","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83114264.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({value, onChange}) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\tFilter by <input value={value} onChange={onChange} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({onSubmit, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n\treturn (\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<div>name: <input value={newName} onChange={handleNameChange} /></div>\r\n\t\t\t\t<div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ul>\r\n\t\t\t\t{persons.map(person =>\r\n\t\t\t\t\t<li key={person.name}>\r\n\t\t\t\t\t\t{person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button>\r\n\t\t\t\t\t</li>)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, cssClass }) => {\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={cssClass}>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'https://sleepy-retreat-96019.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`)\r\n\treturn request.then(request => request.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([])\r\n\tconst [newName, setNewName] = useState('')\r\n\tconst [newNumber, setNewNumber] = useState('')\r\n\tconst [filterString, setNewFilter] = useState('')\r\n\tconst [notificationMessage, setNotificationMessage] = useState(null)\r\n\tconst [notificationClass, setNotificationClass] = useState('error')\r\n\r\n\tuseEffect(() => {\r\n\t\tpersonService.getAll().then(\r\n\t\t\tdata => setPersons(data)\r\n\t\t)\r\n\t}, [])\r\n\r\n\tconst showNotification = (message, error) => {\r\n\t\tif(error){\r\n\t\t\tsetNotificationClass('error')\r\n\t\t}else{\r\n\t\t\tsetNotificationClass('success')\r\n\t\t}\r\n\t\tsetNotificationMessage(message)\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetNotificationMessage(null)\r\n\t\t  }, 5000)\r\n\t}\r\n\r\n\tconst filterPersons = () => {\r\n\t\tif (filterString === '')\r\n\t\t\treturn persons\r\n\r\n\t\tconst lowerFilter = filterString.toLowerCase()\r\n\t\treturn persons.filter(p =>\r\n\t\t\tp.name.toLowerCase().includes(lowerFilter) ||\r\n\t\t\tp.number.toLowerCase().includes(lowerFilter))\r\n\t}\r\n\r\n\tconst personExists = (name) => {\r\n\t\treturn persons.some(x => x.name === name)\r\n\t}\r\n\r\n\tconst addPerson = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tif (!personExists(newName, newNumber)) {\r\n\t\t\tconst newPerson = { name: newName, number: newNumber }\r\n\t\t\tpersonService.create(newPerson).then(data => {\r\n\t\t\t\tsetPersons(persons.concat(data))\r\n\t\t\t\tshowNotification(`${data.name} was added!`, false)\r\n\t\t\t})\r\n\t\t\tsetNewName('')\r\n\t\t\tsetNewNumber('')\r\n\t\t} else {\r\n\t\t\tif (window.confirm(`${newName} is already added to phonebook. Replace old number with new one?`)) {\r\n\t\t\t\tconst id = persons.find(p => p.name === newName).id\r\n\t\t\t\tconst newPerson = { name: newName, number: newNumber }\r\n\t\t\t\tpersonService.update(id, newPerson).then(data => {\r\n\t\t\t\t\t setPersons(\r\n\t\t\t\t\t\tpersons.map(\r\n\t\t\t\t\t\t\tp => p.id === id ? data : p\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t\tshowNotification(`${data.name} was updated!`, false)\r\n\t\t\t\t}\r\n\t\t\t\t).catch(error => {\r\n\t\t\t\t\tshowNotification(`${newName} does not exist in the server anymore.`, true)\r\n\t\t\t\t\tsetPersons(persons.filter(p => p.name !== newName))\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleNameChange = (event) => {\r\n\t\tsetNewName(event.target.value)\r\n\t}\r\n\r\n\tconst handleNumberChange = (event) => {\r\n\t\tsetNewNumber(event.target.value)\r\n\t}\r\n\r\n\tconst handleFilterChange = (event) => {\r\n\t\tsetNewFilter(event.target.value)\r\n\t}\r\n\r\n\tconst deletePerson = (person) => {\r\n\t\tif (window.confirm(`Delete ${person.name}?`)) {\r\n\t\t\tpersonService.remove(person.id)\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(person, ' deleted')\r\n\t\t\t\t\tsetPersons(persons.filter(p => p.id !== person.id))\r\n\t\t\t\t\tshowNotification(`${person.name} was deleted!`, false)\r\n\t\t\t\t}).catch(error => {\r\n\t\t\t\t\tshowNotification(`${person.name} does not exist in the server anymore.`, true)\r\n\t\t\t\t\tsetPersons(persons.filter(p => p.id !== person.id))\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Phonebook</h2>\r\n\t\t\t<Notification message={notificationMessage} cssClass={notificationClass} />\r\n\t\t\t<Filter value={filterString} onChange={handleFilterChange} />\r\n\t\t\t<h2>Add new contact</h2>\r\n\t\t\t<PersonForm onSubmit={addPerson} newName={newName}\r\n\t\t\t\thandleNameChange={handleNameChange} newNumber={newNumber}\r\n\t\t\t\thandleNumberChange={handleNumberChange} />\r\n\t\t\t<h2>Numbers</h2>\r\n\t\t\t<Persons persons={filterPersons()} deletePerson={deletePerson} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}